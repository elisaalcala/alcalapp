name: Push to Master

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: write
  
jobs:
  publish:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"  # Verifica que el mensaje de commit no contenga [skip ci]
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: elisaalcala/mydb:latest
        env:
          MYSQL_ROOT_PASSWORD: 3301
          MYSQL_DATABASE: alcalapp_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost" --health-interval=10s --health-timeout=5s --health-retries=3

    env: # Global environment
      DB_URL: jdbc:mysql://localhost:3306/alcalapp_db?serverTimezone=UTC
      DB_USERNAME: root
      DB_PASSWORD: 3301
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Get Current Version
        id: get_version
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

      - name: Remove SNAPSHOT from Version
        run: |
          RELEASE_VERSION=$(echo ${{ env.CURRENT_VERSION }} | sed 's/-SNAPSHOT//')
          mvn versions:set -DnewVersion=$RELEASE_VERSION
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: Commit and push release version
        run: |
          git config --global user.name "elisaalcala"
          git config --global user.email "elisaalcgue@gmail.com"
          git remote set-url origin https://elisaalcala:${{ secrets.GITHUB_TOKEN }}@github.com/elisaalcala/alcalapp.git
          if [[ $(git diff --stat pom.xml) != '' ]]; then
            git add pom.xml
            git commit -m "Release version ${RELEASE_VERSION} [skip ci]"
            git push origin master
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new tag for release
        run: |
          git tag -a "v${RELEASE_VERSION}" -m "Release version ${RELEASE_VERSION}"
          git push origin "v${RELEASE_VERSION}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   
      - name: Generate tag
        id: project
        run: echo "tag=$(mvn -q help:evaluate -Dexpression=project.version -DforceStdout)" >> $GITHUB_OUTPUT
        
      - name: Generate Docker image
        run: mvn spring-boot:build-image -DskipTests -Dspring-boot.build-image.imageName=${{ secrets.DOCKERHUB_USERNAME }}/alcalapp:${{ steps.project.outputs.tag }}

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/alcalapp:${{ steps.project.outputs.tag }}
        
    outputs:
      tag: ${{ steps.project.outputs.tag }}

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    
    steps:
      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
            
      - name: 'Run az commands to deploy container'
        run: |
          az container create \
            --resource-group ${{ secrets.AZURE_GROUP }} \
            --name alcalapp \
            --image ${{ secrets.DOCKERHUB_USERNAME }}/alcalapp:${{ needs.publish.outputs.tag }} \
            --dns-name-label elisaalcala-alcalapp \
            --registry-login-server index.docker.io \
            --registry-username ${{ secrets.DOCKERHUB_USERNAME }} \
            --registry-password ${{ secrets.DOCKERHUB_READ_TOKEN }} \
            --ports 8443 \
            --environment-variables \
              DB_URL="jdbc:mysql://db-alcalapp.mysql.database.azure.com:3306/alcalapp_db?serverTimezone=UTC&useSSL=true" \
              DB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}" \
              DB_PASSWORD="${{ secrets.DB_PRO_PASSWORD }}"
